内容简介/-11
序言/-10
前言/-9
第1篇 叩开C++世界的大门/1
第1章 C++世界地图/3
1.1 C++是什么/3
1.2 C++的前世今生/3
1.2.1 从B到C/4
1.2.2 从C到C++/4
1.2.3 从C++到.NET Framework的CLI/6
1.2.4 最新标准C++0x让C++重新焕发活力/8
1.2.5 C++和C#不得不说的那点事儿/8
1.2.6 C++世界的五大子语言/9
1.3 C++世界版图/10
1.3.1 Windows系统下的C++开发/10
1.3.2 Linux系统下的C++开发/11
1.3.3 嵌入式系统下的C++开发/11
1.4 如何学好C++/12
1.4.1 将自然语言转换为C++程序设计语言/12
1.4.2 “多读多写”是学好C++的不二法门/14
1.4.3 和Google做朋友/14
第2章 与C++第一次亲密接触/17
2.1 一个C++程序的自白/17
2.1.1 用Visual Studio创建C++程序/17
2.1.2 以手工方式创建C++程序/20
2.1.3 C++程序=预编译指令+程序代码+注释/21
2.1.4 编译器和链接器/25
2.1.5 C++程序的执行过程/26
2.1.6 程序的两大任务：描述数据与处理数据/27
2.2 基本输入/输出流/28
2.2.1 标准的输入和输出对象/29
2.2.2 输出格式控制/31
2.2.3 读/写文件/32
2.3 最常用的开发环境Visual Studio/34
2.3.1 Visual C++的常用菜单/35
2.3.2 Visual C++的常用视图/44
2.4 C++世界旅行必备的物品/46
2.4.1 编程助手Visual Assist/46
2.4.2 代码配置管理工具Visual Source Safe/48
2.4.3 CodeProject和CodeGuru/48
2.4.4 C++百科全书MSDN/48
第2篇 欢迎来到C++世界/51
第3章 C++世界众生相/53
3.1 C++中的数据类型/53
3.2 变量和常量/54
3.2.1 声明变量/55
3.2.2 给变量取个好名字/55
3.2.3 变量初始化/57
3.2.4 常量/57
3.2.5 用宏与const关键字定义常量/59
3.3 数值类型/62
3.3.1 整型数值类型/62
3.3.2 浮点型数值类型/63
3.4 布尔类型/64
3.5 字符串类型/65
3.5.1 字符类型/65
3.5.2 字符串类型/66
3.6 数组/67
3.6.1 数组的声明与初始化/68
3.6.2 数组的使用/69
3.7 枚举类型/71
3.8 用结构体类型描述复杂的事物/73
3.8.1 结构体的定义/73
3.8.2 结构体的使用/74
3.9 指向内存位置的指针/76
3.9.1 指针就是表示内存地址的数据类型/76
3.9.2 指针变量的定义/77
3.9.3 指针的赋值和使用/78
第4章 将语句编织成程序/81
4.1 用运算符对数据进行运算/81
4.1.1 用表达式表达设计意图/82
4.1.2 算术运算符/82
4.1.3 赋值操作符/84
4.1.4 关系运算符/84
4.1.5 逻辑运算符/86
4.1.6 运算符之间的优先顺序/87
4.1.7 将表达式组织成语句/89
4.2 条件选择语句/90
4.2.1 if语句/90
4.2.2 并列选择的switch语句/93
4.3 循环控制语句/97
4.3.1 while循环/97
4.3.2 do…while循环/99
4.3.3 for循环/100
4.3.4 循环控制：break和continue/102
4.4 从语句到程序/104
4.4.1 程序是控制语句串联起来的语句/104
4.4.2 豪华工资统计程序/106
第5章 用函数封装程序功能/109
5.1 函数就是一个大“箱子”/109
5.1.1 函数的声明和定义/110
5.1.2 函数调用机制/113
5.1.3 函数的声明与函数调用/117
5.1.4 函数参数的传递/119
5.1.5 函数的返回值/121
5.2 内联函数/123
5.2.1 用体积换速度的内联函数/123
5.2.2 内联函数的使用规则/124
5.3 重载函数/125
5.3.1 重载函数的声明/125
5.3.2 重载函数的解析/128
5.4 函数设计的基本规则/129
5.4.1 函数声明的设计规则/129
5.4.2 函数体的设计规则/131
第6章 当C++爱上面向对象/135
6.1 从结构化设计到面向对象程序设计/135
6.1.1 “自顶向下，逐步求精”的结构化程序设计/136
6.1.2 面向对象程序设计/137
6.1.3 面向对象的三座基石：封装、继承与多态/138
6.2 类：当C++爱上面向对象/142
6.2.1 类的声明和定义/142
6.2.2 使用类创建对象/146
6.2.3 构造函数和析构函数/148
6.2.4 拷贝构造函数/152
6.2.5 操作符重载/155
6.2.6 类成员的访问控制/157
6.2.7 在友元中访问类的隐藏信息/160
6.3 类如何面向对象/162
6.3.1 用类机制实现封装/163
6.3.2 用基类和派生类实现继承/164
6.3.3 用虚函数实现多态/171
6.4 实战面向对象：工资管理系统/175
6.4.1 从问题描述中发现对象/175
6.4.2 分析对象的属性和行为/176
6.4.3 实现类的属性和行为/177
6.5 高手是这样炼成的/183
6.5.1 C++类对象的内存模型/183
6.5.2 指向自身的this指针/185
第7章 C++世界的奇人异事/189
7.1 一切指针都是纸老虎：彻底理解指针/189
7.1.1 指针的运算/189
7.1.2 灵活的void类型和void类型指针/192
7.1.3 指向指针的指针/194
7.1.4 指针在函数中的应用/195
7.1.5 引用/198
7.2 程序中的异常处理/203
7.2.1 异常处理/203
7.2.2 异常的函数接口声明/206
7.2.3 合理使用异常处理/207
7.3 编写更复杂的C++程序/208
7.3.1 源文件和头文件/208
7.3.2 名字空间/210
7.3.3 作用域与可见性/214
7.3.4 编译预处理/218
7.4 高手是这样炼成的/220
7.4.1 用宏定义化繁为简/220
7.4.2 用typedef定义类型的别名/221
7.4.3 用const保护数据/223
第3篇 攀登C++世界的高峰/227
第8章 用STL优雅你的程序/229
8.1 跟STL做朋友/230
8.1.1 算法 + 容器 + 迭代器 = STL/230
8.1.2 在程序中使用STL/231
8.1.3 STL到底好在哪里/233
8.2 用模板实现通用算法/234
8.2.1 函数模板/235
8.2.2 类模板/238
8.2.3 模板的实例化/240
8.2.4 用模板实现通用算法/241
第9章 STL中的容器管理数据/245
9.1 容器就是STL中的瓶瓶罐罐/245
9.1.1 操作容器中的数据元素/247
9.1.2 使用迭代器访问容器中的数据元素/247
9.1.3 容器的使用说明书/249
9.1.4 如何选择合适的容器/252
9.2 vector容器是数组的最佳替代者/253
9.2.1 创建并初始化vector对象/253
9.2.2 vector容器的操作/256
9.2.3 访问vector容器中的数据/257
9.3 可以保存键值对的map容器/258
9.3.1 创建并初始化map容器/258
9.3.2 将数据保存到map容器中/259
9.3.3 根据键找到对应的值/260
第10章 用STL中的通用算法处理数据/263
10.1 STL算法中的“四大帮派”/263
10.2 容器元素的查找与遍历/264
10.2.1 用for_each()算法遍历容器中的数据元素/264
10.2.2 用find()和find_if()算法实现线性查找/266
10.3 容器元素的复制与变换/270
10.3.1 复制容器元素：copy()算法/270
10.3.2 合并容器元素：merge()算法/272
10.3.3 变换容器元素：transform函数/274
10.4 容器元素的排序/276
10.4.1 使用sort()算法对容器中的数据进行排序/276
10.4.2 对排序的规则进行自定义/279
10.5 实战STL算法/282
10.5.1 “算法”老师带来的一堂别开生面的体育课/282
10.5.2 删除容器中的冗余元素/284
第11章 函数指针、函数对象与Lambda表达式/287
11.1 函数指针/287
11.1.1 函数指针的声明与赋值/287
11.1.2 用函数指针调用函数/289
11.1.3 用函数指针实现回调函数/291
11.1.4 将函数指针应用到STL算法中/293
11.2 函数对象/295
11.2.1 定义一个函数对象/295
11.2.2 利用函数对象记住状态数据/297
11.3 用Lambda表达式编写更简单的函数/299
11.3.1 最简单直接的函数表达形式：Lambda表达式/299
11.3.2 Lambda表达式的语法规则/301
11.3.3 Lambda表达式的复用/302
第12章 C++世界的几件新鲜事/305
12.1 用右值引用榨干C++的性能/305
12.1.1 什么是右值/305
12.1.2 右值引用在函数返回值上的应用/306
12.1.3 STL算法中被浪费的右值/307
12.1.4 右值引用如何提高性能/310
12.2 智能指针shared_ptr/312
12.2.1 C++的内存管理/312
12.2.2 用聪明的shared_ptr解决内存管理问题/313
12.2.3 智能指针的应用场景/315
12.2.4 shared_ptr的使用/316
12.2.5 shared_ptr与标准库容器/321
12.2.6 对shared_ptr进行自定义/323
12.3 用PPL进行多线程开发/326
12.3.1 多核给程序设计带来的挑战/326
12.3.2 PPL带来免费的午餐/327
12.3.3 PPL中的并行算法/329
12.3.4 PPL中的并行任务/331
12.3.5 PPL中的并行对象和并行容器/334
12.3.6 PPL之外的另一种选择：OpenMP/340
第13章 找工作就靠它了/343
13.1 打好基础/343
13.1.1 基本概念/343
13.1.2 函数/346
13.1.3 面向对象思想/348
13.1.4 类与对象/349
13.1.5 STL/360
13.2 积累经验/362
13.3 考查智力/364
附录A 接下来该读什么书/367
A.1 开山鼻祖：《C++程序设计语言》/367
A.2 初学者必看：《C++ Primer中文版（第4版）》/368
A.3 百科全书：《代码大全，第2版》/368
A.4 内功秘籍：《Effective C++（Third Edition）》/370
A.5 经验很重要：《C++编程规范》/370
后记/373